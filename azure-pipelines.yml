# A pipeline with no CI trigger
trigger: none

pr:
  branches:
    include:
    - master
    - releases/*
  paths:
    include:
    - '*'
    exclude:
    - '*.md'
    - 'docs/**/*'
    - 'Microsoft.Azure.Cosmos/contracts/**/*'

variables:
  DebugArguments: ' --filter "TestCategory!=Quarantine & TestCategory!=Functional" --verbosity normal '
  ReleaseArguments: ' --filter "TestCategory!=Quarantine & TestCategory!=Functional" --verbosity normal '
  VmImage: windows-latest # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops


jobs:
- template:  templates/static-tools.yml
  parameters:
    BuildConfiguration: Release
    VmImage: $(VmImage)

- template:  templates/nuget-pack.yml
  parameters:
    BuildConfiguration: Release
    VmImage: $(VmImage)
    ReleasePackage: false
    OutputPath: '$(Build.ArtifactStagingDirectory)/bin/AnyCPU/Release/Microsoft.Azure.Cosmos'

- template:  templates/build-ctl.yml
  parameters:
    BuildConfiguration: Release
    Arguments: $(ReleaseArguments)
    VmImage: $(VmImage)

- template:  templates/build-samples.yml
  parameters:
    BuildConfiguration: Release
    Arguments: $(ReleaseArguments)
    VmImage: $(VmImage)

- template:  templates/build-test.yml
  parameters:
    BuildConfiguration: Release
    Arguments: $(ReleaseArguments)
    VmImage: $(VmImage)

- template:  templates/build-internal.yml
  parameters:
    BuildConfiguration: Release
    Arguments: $(ReleaseArguments)
    VmImage:  $(VmImage)

- template:  templates/build-preview.yml
  parameters:
    BuildConfiguration: Release
    Arguments: $(ReleaseArguments)
    VmImage:  $(VmImage)

- template:  templates/build-benchmark.yml
  parameters:
    BuildConfiguration: Release
    Arguments: $(ReleaseArguments)
    VmImage:  $(VmImage)

- job:
  displayName: TelemetryToService ${{ parameters.BuildConfiguration }}
  timeoutInMinutes: 120
  condition: and(succeeded(), eq('${{ parameters.OS }}', 'Windows'))
  pool:
    vmImage: windows-2019
  
  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  # Add this Command to Include the .NET 6 SDK
  - task: UseDotNet@2
    displayName: Use .NET 6.0
    inputs:
      packageType: 'sdk'
      version: '6.x'

  - task: DotNetCoreCLI@2
    displayName: Integration Test With Client Telemetry Service
    condition: succeeded()
    inputs:
      command: test
      projects: 'Microsoft.Azure.Cosmos/tests/Microsoft.Azure.Cosmos.EmulatorTests/*.csproj'
      arguments: --filter "TestCategory=ClientTelemetryRelease" --verbosity normal --configuration ${{ parameters.BuildConfiguration }} /p:OS=${{ parameters.OS }}
      nugetConfigPath: NuGet.config
      publishTestResults: true
      testRunTitle: Microsoft.Azure.Cosmos.EmulatorTests
    env:
      COSMOSDB_ACCOUNT_CONNECTION_STRING: $(COSMOSDB_ACCOUNT_CONNECTION_STRING) # Real Account Connection String used by Integration Tests while running as part of release pipeline
