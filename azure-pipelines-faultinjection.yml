trigger: none

pr: none

variables:
  ReleaseArguments: ' --verbosity normal ' 
  BuildConfiguration: Release
  Packaging.EnableSBOMSigning: true
  VmImage: windows-latest # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops 

stages:
- stage:
  displayName: Fault Injection Release Gates
  jobs:
    - template:  templates/static-tools.yml
      parameters:
        BuildConfiguration: '${{ variables.BuildConfiguration }}'
        VmImage: '${{ variables.VmImage }}'

    # - template:  templates/build-fault-injection-test.yml
    #   parameters:
    #     BuildConfiguration: '${{ variables.BuildConfiguration }}'
    #     Arguments: '${{ variables.ReleaseArguments }}'
    #     VmImage: '${{ variables.VmImage }}'
    #     MultiRegionConnectionString: $(COSMOSDB_MULTI_REGION)
        
    - job:
      displayName: FaultInjection Integration Tests ${{ variables.BuildConfiguration }}
      timeoutInMinutes: 120
      pool:
        name: 'OneES'
      
      steps:
      - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
        clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

      # Add this Command to Include the .NET SDK and runtimes
      - task: UseDotNet@2
        displayName: Use .NET 6.0
        inputs:
          packageType: 'runtime'
          version: '6.x'

      - task: UseDotNet@2
        displayName: Use .NET 8.0
        inputs:
          packageType: 'sdk'
          version: '8.x'

      - task: DotNetCoreCLI@2
        displayName: Integration Test With Fault Injection
        condition: succeeded()
        inputs:
          command: test
          projects: 'Microsoft.Azure.Cosmos/FaultInjection/tests/*.csproj'
          arguments: --verbosity normal --configuration ${{ variables.BuildConfiguration }} /p:OS=Windows
          nugetConfigPath: NuGet.config
          publishTestResults: true
          testRunTitle: FaultInjectionTests
        env:
          COSMOSDB_MULTI_REGION: $(COSMOSDB_MULTI_REGION) # Real Account Connection String used by Integration Tests while running as part of release pipeline

- stage:
  displayName: Publish 
  jobs:
    - template:  templates/fault-injection-nuget-pack.yml
      parameters:
        BuildConfiguration: Release
        VmImage: '${{ variables.VmImage }}'
        ReleasePackage: true
        OutputPath: '$(Build.ArtifactStagingDirectory)/bin/AnyCPU/Release/Microsoft.Azure.Cosmos.FaultInjection'
        BlobVersion: $(BlobVersion)