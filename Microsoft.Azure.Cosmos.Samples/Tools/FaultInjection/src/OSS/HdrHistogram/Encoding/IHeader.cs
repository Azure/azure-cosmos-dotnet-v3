// ------------------------------------------------------------
// The code in this repository code was written by Lee Campbell, as a
// derived work from the original Java by Gil Tene of Azul Systems and
// Michael Barker, and released to the public domain, as explained
// at http://creativecommons.org/publicdomain/zero/1.0/
// ------------------------------------------------------------

// This file isn't generated, but this comment is necessary to exclude it from StyleCop analysis.
// <auto-generated/>

namespace HdrHistogram.Encoding
{
    /// <summary>
    /// Defines the header properties to be encoded for an HdrHistogram.
    /// </summary>
    internal interface IHeader
    {
        /// <summary>
        /// The cookie value for the histogram.
        /// </summary>
        int Cookie { get; }
        /// <summary>
        /// The length in bytes of the payload body.
        /// </summary>
        int PayloadLengthInBytes { get; }
        /// <summary>
        /// The normalizing index offset.
        /// </summary>
        int NormalizingIndexOffset { get; } //Not currently implemented/used.
        /// <summary>
        /// THe number of significant digits that values are measured to.
        /// </summary>
        int NumberOfSignificantValueDigits { get; }
        /// <summary>
        /// The lowest trackable value for the histogram
        /// </summary>
        long LowestTrackableUnitValue { get; }
        /// <summary>
        /// The highest trackable value for the histogram
        /// </summary>
        long HighestTrackableValue { get; }
        /// <summary>
        /// Integer to double conversion ratio.
        /// </summary>
        double IntegerToDoubleValueConversionRatio { get; } //Not currently implemented/used.
        /// <summary>
        /// The amount of excess capacity that will not be needed.
        /// </summary>
        int CapacityEstimateExcess { get; }
    }
}