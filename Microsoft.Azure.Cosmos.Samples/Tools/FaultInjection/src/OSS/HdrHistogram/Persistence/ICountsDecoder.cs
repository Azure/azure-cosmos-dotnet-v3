// ------------------------------------------------------------
// The code in this repository code was written by Lee Campbell, as a
// derived work from the original Java by Gil Tene of Azul Systems and
// Michael Barker, and released to the public domain, as explained
// at http://creativecommons.org/publicdomain/zero/1.0/
// ------------------------------------------------------------

// This file isn't generated, but this comment is necessary to exclude it from StyleCop analysis.
// <auto-generated/>

using System;
using HdrHistogram.Utilities;

namespace HdrHistogram.Persistence
{
    /// <summary>
    /// Defines methods to read counts values from a potentially encoded <see cref="ByteBuffer"/>.
    /// </summary>
    internal interface ICountsDecoder
    {
        /// <summary>
        /// The target word size for the encoder.
        /// </summary>
        int WordSize { get; }

        /// <summary>
        /// Decodes from a supplied <see cref="ByteBuffer"/> count values and calls a delegate with index and count.
        /// </summary>
        /// <param name="sourceBuffer">The source of the data.</param>
        /// <param name="lengthInBytes">The length in bytes to read.</param>
        /// <param name="maxIndex"></param>
        /// <param name="setCount">A delegate to call with the count for a given index.</param>
        /// <returns>The index that was read to.</returns>
        int ReadCounts(ByteBuffer sourceBuffer, int lengthInBytes, int maxIndex, Action<int, long> setCount);
    }
}