# File: templates/build-preview.yml

parameters:
  BuildConfiguration: ''
  Arguments: ''
  VmImage: ''
  OS: 'Windows'

jobs:

- job:
  displayName: Preview Flag ${{ parameters.BuildConfiguration }} 
  pool:
    name: 'OneES'

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  # Add this Command to Include the .NET SDK and runtimes
  - task: UseDotNet@2
    displayName: Use .NET 6.0
    inputs:
      packageType: 'runtime'
      version: '6.x'      

  - task: UseDotNet@2
    displayName: Use .NET 8.0
    inputs:
      packageType: 'sdk'
      version: '8.x'

  - task: DotNetCoreCLI@2
    displayName: Build Microsoft.Azure.Cosmos PREVIEW
    inputs: 
      command: build  
      configuration: $(parameters.BuildConfiguration)
      nugetConfigPath: NuGet.config
      projects: Microsoft.Azure.Cosmos.sln 
      arguments: -p:Optimize=true -p:IsPreview=true
      versioningScheme: OFF
      
- job:
  displayName: Encryption Project Ref SDK Preview ${{ parameters.BuildConfiguration }} 
  pool:
    name: 'OneES'

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  # Add this Command to Include the .NET 6 SDK
  - task: UseDotNet@2
    displayName: Use .NET 6.0
    inputs:
      packageType: 'runtime'
      version: '6.x'      

  - task: UseDotNet@2
    displayName: Use .NET 8.0
    inputs:
      packageType: 'sdk'
      version: '8.x'
      
  - task: DotNetCoreCLI@2
    displayName: Build Microsoft.Azure.Cosmos.Encryption Project Ref
    inputs: 
      command: build  
      configuration: $(parameters.BuildConfiguration)
      nugetConfigPath: NuGet.config
      projects: Microsoft.Azure.Cosmos.sln 
      arguments: -p:Optimize=true -p:IsPreview=true;SdkProjectRef=true
      versioningScheme: OFF

- job:
  displayName: Preview Encryption EmulatorTests ${{ parameters.BuildConfiguration }}
  timeoutInMinutes: 60
  condition: and(succeeded(), eq('${{ parameters.OS }}', 'Windows'))
  pool:
    name: 'OneES'

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  # Add this Command to Include the .NET 6 SDK
  - task: UseDotNet@2
    displayName: Use .NET 6.0
    inputs:
      packageType: 'runtime'
      version: '6.x'      

  - task: UseDotNet@2
    displayName: Use .NET 8.0
    inputs:
      packageType: 'sdk'
      version: '8.x'

  - template:  emulator-setup.yml

  - task: DotNetCoreCLI@2
    displayName: PREVIEW Microsoft.Azure.Cosmos.Encryption.EmulatorTests
    condition: succeeded()
    inputs:
      command: test
      projects: 'Microsoft.Azure.Cosmos.Encryption/tests/EmulatorTests/*.csproj'
      arguments: ${{ parameters.Arguments }} --configuration ${{ parameters.BuildConfiguration }} /p:IsPreview=true /p:SdkProjectRef=false /p:OS=${{ parameters.OS }}
      nugetConfigPath: NuGet.config
      publishTestResults: true
      testRunTitle: Microsoft.Azure.Cosmos.Encryption.EmulatorTests

- job:
  displayName: Encryption.Custom Project Ref SDK Preview ${{ parameters.BuildConfiguration }} 
  pool:
    name: 'OneES'

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  # Add this Command to Include the .NET 6 SDK
  - task: UseDotNet@2
    displayName: Use .NET 6.0
    inputs:
      packageType: 'runtime'
      version: '6.x'      

  - task: UseDotNet@2
    displayName: Use .NET 8.0
    inputs:
      packageType: 'sdk'
      version: '8.x'

  - task: DotNetCoreCLI@2
    displayName: Build Microsoft.Azure.Cosmos.Encryption.Custom Project Ref
    inputs: 
      command: build  
      configuration: $(parameters.BuildConfiguration)
      nugetConfigPath: NuGet.config
      projects: Microsoft.Azure.Cosmos.sln 
      arguments: -p:Optimize=true -p:IsPreview=true;SdkProjectRef=true
      versioningScheme: OFF

- job:
  displayName: Preview Tests ${{ parameters.BuildConfiguration }}
  pool:
    name: 'OneES'

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  # Add this Command to Include the .NET 6 SDK
  - task: UseDotNet@2
    displayName: Use .NET 6.0
    inputs:
      packageType: 'runtime'
      version: '6.x'      

  - task: UseDotNet@2
    displayName: Use .NET 8.0
    inputs:
      packageType: 'sdk'
      version: '8.x'

  - task: DotNetCoreCLI@2
    displayName: PREVIEW Microsoft.Azure.Cosmos.Tests
    condition: succeeded()
    inputs:
      command: test
      projects: 'Microsoft.Azure.Cosmos/tests/Microsoft.Azure.Cosmos.Tests/*.csproj'
      arguments: ${{ parameters.Arguments }} --configuration ${{ parameters.BuildConfiguration }} /p:IsPreview=true /p:OS=${{ parameters.OS }}
      publishTestResults: true
      nugetConfigPath: NuGet.config
      testRunTitle: Microsoft.Azure.Cosmos.Tests

- job:
  displayName: Preview Tests ${{ parameters.BuildConfiguration }} Flaky
  pool:
    name: 'OneES'

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  # Add this Command to Include the .NET 6 SDK
  - task: UseDotNet@2
    displayName: Use .NET 6.0
    inputs:
      packageType: 'runtime'
      version: '6.x'      

  - task: UseDotNet@2
    displayName: Use .NET 8.0
    inputs:
      packageType: 'sdk'
      version: '8.x'

  - task: DotNetCoreCLI@2
    displayName: PREVIEW Microsoft.Azure.Cosmos.Tests
    retryCountOnTaskFailure: 4
    condition: succeeded()
    inputs:
      command: test
      projects: 'Microsoft.Azure.Cosmos/tests/Microsoft.Azure.Cosmos.Tests/*.csproj'
      arguments: --filter "TestCategory=Flaky" --verbosity normal --configuration ${{ parameters.BuildConfiguration }} /p:IsPreview=true /p:OS=${{ parameters.OS }}
      publishTestResults: true
      nugetConfigPath: NuGet.config
      testRunTitle: Microsoft.Azure.Cosmos.Tests