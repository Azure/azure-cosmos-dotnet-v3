# File: templates/build-preview.yml

parameters:
  BuildConfiguration: ''
  Arguments: ''
  VmImage: ''
  OS: 'Windows'

jobs:

- job:
  displayName: Preview Flag ${{ parameters.BuildConfiguration }} 
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  - task: DotNetCoreCLI@2
    displayName: Build Microsoft.Azure.Cosmos PREVIEW
    inputs: 
      command: build  
      configuration: $(parameters.BuildConfiguration)
      nugetConfigPath: NuGet.config
      projects: Microsoft.Azure.Cosmos.sln 
      arguments: -p:Optimize=true -p:IsPreview=true
      versioningScheme: OFF
      
- job:
  displayName: Encryption Project Ref SDK Preview ${{ parameters.BuildConfiguration }} 
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  - task: DotNetCoreCLI@2
    displayName: Build Microsoft.Azure.Cosmos.Encryption Project Ref
    inputs: 
      command: build  
      configuration: $(parameters.BuildConfiguration)
      nugetConfigPath: NuGet.config
      projects: Microsoft.Azure.Cosmos.sln 
      arguments: -p:Optimize=true -p:IsPreview=true;SdkProjectRef=true
      versioningScheme: OFF

- job:
  displayName: Encryption.Custom Project Ref SDK Preview ${{ parameters.BuildConfiguration }} 
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  - task: DotNetCoreCLI@2
    displayName: Build Microsoft.Azure.Cosmos.Encryption.Custom Project Ref
    inputs: 
      command: build  
      configuration: $(parameters.BuildConfiguration)
      nugetConfigPath: NuGet.config
      projects: Microsoft.Azure.Cosmos.sln 
      arguments: -p:Optimize=true -p:IsPreview=true;SdkProjectRef=true
      versioningScheme: OFF

- job:
  displayName: Preview Tests ${{ parameters.BuildConfiguration }}
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  - task: DotNetCoreCLI@2
    displayName: PREVIEW Microsoft.Azure.Cosmos.Tests
    condition: succeeded()
    inputs:
      command: test
      projects: 'Microsoft.Azure.Cosmos/tests/Microsoft.Azure.Cosmos.Tests/*.csproj'
      arguments: ${{ parameters.Arguments }} --configuration ${{ parameters.BuildConfiguration }} /p:IsPreview=true /p:OS=${{ parameters.OS }}
      publishTestResults: true
      nugetConfigPath: NuGet.config
      testRunTitle: Microsoft.Azure.Cosmos.Tests

- job:
  displayName: Preview CosmosBenchmark ${{ parameters.BuildConfiguration }} 
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  - task: DotNetCoreCLI@2
    displayName: Build Microsoft.Azure.CosmosBenchmark 
    inputs: 
      command: build  
      configuration: $(parameters.BuildConfiguration)
      nugetConfigPath: NuGet.config
      projects:  'Microsoft.Azure.Cosmos.Samples/Tools/Benchmark/CosmosBenchmark.sln' 
      arguments: -p:Optimize=true -p:IsPreview=true
      versioningScheme: OFF