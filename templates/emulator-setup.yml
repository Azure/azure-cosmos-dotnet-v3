# File: templates/emulator-setup.yml

parameters:
  EnableCompute: false

steps:
  - pwsh:  |
        Write-Host "Downloading Cosmos Emulator - $env:EMULATORMSIURL" -ForegroundColor green 
        Invoke-WebRequest "$env:EMULATORMSIURL" -OutFile "$env:temp\azure-cosmosdb-emulator.msi"
        Write-Host "Finished Downloading Cosmos Emulator - $env:temp\azure-cosmosdb-emulator.msi" -ForegroundColor green 
        dir "$env:temp" 
        choco install lessmsi
        choco upgrade lessmsi
        mkdir "$env:temp\Azure Cosmos DB Emulator"
        lessmsi x "$env:temp\azure-cosmosdb-emulator.msi" "$env:temp\Azure Cosmos DB Emulator\"
        Write-Host "Starting Cosmos DB Emulator" -ForegroundColor green 
        Add-MpPreference -ExclusionPath "$env:temp\Azure Cosmos DB Emulator\SourceDir\Azure Cosmos DB Emulator"
        Add-MpPreference -ExclusionPath "$env:localappdata\CosmosDBEmulator"
    displayName:  Downloading and Installing Cosmos DB Emulator
    failOnStderr:  true
    errorActionPreference:  stop
  - ${{ if eq(parameters.EnableCompute, true) }}:
    - pwsh:  |
          Start-Process "$env:temp\Azure Cosmos DB Emulator\SourceDir\Azure Cosmos DB Emulator\CosmosDB.Emulator.exe" "/NoExplorer /NoUI /DisableRateLimiting /PartitionCount=50 /Consistency=Strong /EnablePreview /EnableSqlComputeEndpoint" -Verb RunAs
      displayName:  Starting Cosmos DB Emulator with Compute GW
      failOnStderr:  true
      errorActionPreference:  stop
  - ${{ if eq(parameters.EnableCompute, false) }}:
    - pwsh:  |
          Start-Process "$env:temp\Azure Cosmos DB Emulator\SourceDir\Azure Cosmos DB Emulator\CosmosDB.Emulator.exe" "/NoExplorer /NoUI /DisableRateLimiting /PartitionCount=50 /Consistency=Strong /EnablePreview" -Verb RunAs
      displayName:  Starting Cosmos DB Emulator
      failOnStderr:  true
      errorActionPreference:  stop
  - pwsh:  |
        Import-Module "$env:temp\Azure Cosmos DB Emulator\SourceDir\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator"
        Get-Item env:* | Sort-Object -Property Name
        for ($i=0; $i -lt 10; $i++) {
          $status=Get-CosmosDbEmulatorStatus
          if ($status -ne "Running") {
            sleep 30;
            Write-Host "Cosmos DB Emulator Status: $status" -ForegroundColor yellow
          } else {
            break;
          }
        }
      
    displayName:  Starting Cosmos DB Emulator
    failOnStderr:  true
    errorActionPreference:  stop