# File: templates/nuget-pack.yml

parameters:
  BuildConfiguration: ''
  Arguments: ''
  VmImage: '' # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
  OS: 'Windows'
  OutputPath: ''
  ReleasePackage: false
  BlobVersion: ''

jobs:
- job: GenerateNugetPackages
  displayName: Generate Nuget packages
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - task: DotNetCoreCLI@2
    displayName: Build Microsoft.Azure.Cosmos
    inputs: 
      command: build  
      configuration: $(BuildConfiguration)
      nugetConfigPath: NuGet.config
      projects: Microsoft.Azure.Cosmos/src/Microsoft.Azure.Cosmos.csproj 
      arguments: --configuration ${{ parameters.BuildConfiguration }} -p:Optimize=true 
      versioningScheme: OFF

  - task: DotNetCoreCLI@2
    displayName: 'Create SDK NuGet Package'
    inputs:
      command: custom
      projects: 'Microsoft.Azure.Cosmos\src\Microsoft.Azure.Cosmos.csproj'
      custom: pack
      arguments: '-v detailed -c ${{ parameters.BuildConfiguration }} --no-build --no-restore -o "${{ parameters.OutputPath }}"'

  - ${{ if eq(parameters.ReleasePackage, true) }}:
    - task: DotNetCoreCLI@2
      displayName: 'Create SDK NuGet Symbols Package'
      inputs: 
        command: custom
        projects: 'Microsoft.Azure.Cosmos\src\Microsoft.Azure.Cosmos.csproj'
        custom: pack
        arguments: '-v detailed -c ${{ parameters.BuildConfiguration }} --no-build --include-symbols /p:SymbolPackageFormat=snupkg --no-restore -o "${{ parameters.OutputPath }}"'
    - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
      inputs:
        BuildDropPath: '$(Build.ArtifactStagingDirectory)/bin/AnyCPU/$(BuildConfiguration)/Microsoft.Azure.Cosmos'

    - task: AzureFileCopy@2
      displayName: ' Copy Artifacts to Azure SDK Release blob storage'
      condition: and(succeeded(),ne(${{ parameters.BlobVersion }}, ''))
      inputs:
        SourcePath: '$(Build.ArtifactStagingDirectory)/bin/AnyCPU/$(BuildConfiguration)/Microsoft.Azure.Cosmos'
        azureSubscription: azuresdkpartnerdrops
        Destination: AzureBlob
        storage: azuresdkpartnerdrops
        ContainerName: 'drops'
        BlobPrefix: 'cosmosdb/csharp/$(BlobVersion)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts: Microsoft.Azure.Cosmos'
      inputs:
        artifactName: Microsoft.Azure.Cosmos

    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'
