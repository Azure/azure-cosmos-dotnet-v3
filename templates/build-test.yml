# File: templates/build-test.yml

parameters:
  BuildConfiguration: ''
  Arguments: ''
  VmImage: '' # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
  OS: 'Windows'
  EmulatorPipeline1Arguments: ' --filter "TestCategory!=Quarantine & TestCategory!=Functional & (TestCategory=Query|TestCategory=ReadFeed|TestCategory=Batch|TestCategory=ChangeFeed)" --verbosity normal '
  EmulatorPipeline2Arguments: ' --filter "TestCategory!=Quarantine & TestCategory!=Functional & TestCategory!=Query & TestCategory!=ReadFeed & TestCategory!=Batch & TestCategory!=ChangeFeed" --verbosity normal '
  EmulatorPipeline1CategoryListName: ' Query, ChangeFeed, ReadFeed, Batch ' # Divided in 2 categories to run them in parallel and reduce the PR feedback time
  EmulatorPipeline2CategoryListName: ' Others '

jobs:
- job:
  displayName: PerformanceTests ${{ parameters.BuildConfiguration }}
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  - task: DotNetCoreCLI@2
    displayName: Microsoft.Azure.Cosmos.PerformanceTests - Build
    condition: succeeded()
    inputs:
      command: build
      projects: 'Microsoft.Azure.Cosmos/tests/Microsoft.Azure.Cosmos.Performance.Tests/*.csproj'
      arguments: -c Release 
      nugetConfigPath: NuGet.config
  - task: DotNetCoreCLI@2
    displayName: Microsoft.Azure.Cosmos.PerformanceTests - Run
    condition: succeeded()
    inputs:
      command: run
      projects: 'Microsoft.Azure.Cosmos/tests/Microsoft.Azure.Cosmos.Performance.Tests/*.csproj'
      arguments: --configuration ${{ parameters.BuildConfiguration }} /p:OS=${{ parameters.OS }} --no-restore -c Release --allCategories=GateBenchmark -- -j Medium  -m  --BaselineValidation
      publishTestResults: true
      testRunTitle: Microsoft.Azure.Cosmos.PerformanceTests