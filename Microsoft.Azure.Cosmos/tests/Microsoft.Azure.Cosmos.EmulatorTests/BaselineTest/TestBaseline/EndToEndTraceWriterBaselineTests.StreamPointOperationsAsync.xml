<Results>
  <Result>
    <Input>
      <Description>Point Write</Description>
      <Setup><![CDATA[
    CosmosObject cosmosObject = CosmosObject.Create(
        new Dictionary<string, CosmosElement>()
        {
            { "id", CosmosString.Create(9001.ToString()) }
        });

    ResponseMessage itemResponse = await container.CreateItemStreamAsync(
        new MemoryStream(Encoding.UTF8.GetBytes(cosmosObject.ToString())),
        new Cosmos.PartitionKey("9001"));

    ITrace trace = ((CosmosTraceDiagnostics)itemResponse.Diagnostics).Value;
]]></Setup>
    </Input>
    <Output>
      <Text><![CDATA[.
└── CreateItemStreamAsync(00000000-0000-0000-0000-000000000000)  Transport-Component  00:00:00:000  0.00 milliseconds  
    │   (
    │       [Client Configuration]
    │       Redacted To Not Change The Baselines From Run To Run
    │   )
    └── Microsoft.Azure.Cosmos.Handlers.RequestInvokerHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
        └── Microsoft.Azure.Cosmos.Handlers.DiagnosticsHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
            │   (
            │       [System Info]
            │       Redacted To Not Change The Baselines From Run To Run
            │   )
            └── Microsoft.Azure.Cosmos.Handlers.RetryHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                └── Microsoft.Azure.Cosmos.Handlers.RouterHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                    └── Microsoft.Azure.Cosmos.Handlers.TransportHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                        └── Microsoft.Azure.Documents.ServerStoreModel Transport Request(00000000-0000-0000-0000-000000000000)  Transport-Component  00:00:00:000  0.00 milliseconds  
                                (
                                    [Client Side Request Stats]
                                    Redacted To Not Change The Baselines From Run To Run
                                )
]]></Text>
      <Json><![CDATA[{
  "Summary": {},
  "name": "CreateItemStreamAsync",
  "start time": "00:00:00:000",
  "duration in milliseconds": 0,
  "data": {
    "Client Configuration": "Redacted To Not Change The Baselines From Run To Run"
  },
  "children": [
    {
      "name": "Microsoft.Azure.Cosmos.Handlers.RequestInvokerHandler",
      "duration in milliseconds": 0,
      "children": [
        {
          "name": "Microsoft.Azure.Cosmos.Handlers.DiagnosticsHandler",
          "duration in milliseconds": 0,
          "data": {
            "System Info": "Redacted To Not Change The Baselines From Run To Run"
          },
          "children": [
            {
              "name": "Microsoft.Azure.Cosmos.Handlers.RetryHandler",
              "duration in milliseconds": 0,
              "children": [
                {
                  "name": "Microsoft.Azure.Cosmos.Handlers.RouterHandler",
                  "duration in milliseconds": 0,
                  "children": [
                    {
                      "name": "Microsoft.Azure.Cosmos.Handlers.TransportHandler",
                      "duration in milliseconds": 0,
                      "children": [
                        {
                          "name": "Microsoft.Azure.Documents.ServerStoreModel Transport Request",
                          "duration in milliseconds": 0,
                          "data": {
                            "Client Side Request Stats": "Redacted To Not Change The Baselines From Run To Run"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}]]></Json>
      <OTelActivities><ACTIVITY><OPERATION>Operation.CreateItemStreamAsync</OPERATION><ATTRIBUTE-KEY>kind</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>client</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>az.namespace</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Microsoft.DocumentDB</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.operation</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>CreateItemStreamAsync</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.name</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.container</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.system</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>cosmosdb</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.machine_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>net.peer.name</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>127.0.0.1</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.client_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.user_agent</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.connection_mode</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Direct</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.operation_type</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Create</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.request_content_length_bytes</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.response_content_length_bytes</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.status_code</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.sub_status_code</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.request_charge</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.item_count</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.activity_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.correlated_activity_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.regions_contacted</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>South Central US</ATTRIBUTE-VALUE></ACTIVITY>
<EVENT>Ideally, this should contain request diagnostics but request diagnostics is subject to change with each request as it contains few unique id. So just putting this tag with this static text to make sure event is getting generated for each test.</EVENT>
</OTelActivities>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description>Point Read</Description>
      <Setup><![CDATA[
    ResponseMessage itemResponse = await container.ReadItemStreamAsync(
        id: "9001",
        partitionKey: new Cosmos.PartitionKey("9001"));

    ITrace trace = ((CosmosTraceDiagnostics)itemResponse.Diagnostics).Value;
]]></Setup>
    </Input>
    <Output>
      <Text><![CDATA[.
└── ReadItemStreamAsync(00000000-0000-0000-0000-000000000000)  Transport-Component  00:00:00:000  0.00 milliseconds  
    │   (
    │       [Client Configuration]
    │       Redacted To Not Change The Baselines From Run To Run
    │   )
    └── Microsoft.Azure.Cosmos.Handlers.RequestInvokerHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
        └── Microsoft.Azure.Cosmos.Handlers.DiagnosticsHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
            │   (
            │       [System Info]
            │       Redacted To Not Change The Baselines From Run To Run
            │   )
            └── Microsoft.Azure.Cosmos.Handlers.RetryHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                └── Microsoft.Azure.Cosmos.Handlers.RouterHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                    └── Microsoft.Azure.Cosmos.Handlers.TransportHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                        └── Microsoft.Azure.Documents.ServerStoreModel Transport Request(00000000-0000-0000-0000-000000000000)  Transport-Component  00:00:00:000  0.00 milliseconds  
                                (
                                    [Client Side Request Stats]
                                    Redacted To Not Change The Baselines From Run To Run
                                )
]]></Text>
      <Json><![CDATA[{
  "Summary": {},
  "name": "ReadItemStreamAsync",
  "start time": "00:00:00:000",
  "duration in milliseconds": 0,
  "data": {
    "Client Configuration": "Redacted To Not Change The Baselines From Run To Run"
  },
  "children": [
    {
      "name": "Microsoft.Azure.Cosmos.Handlers.RequestInvokerHandler",
      "duration in milliseconds": 0,
      "children": [
        {
          "name": "Microsoft.Azure.Cosmos.Handlers.DiagnosticsHandler",
          "duration in milliseconds": 0,
          "data": {
            "System Info": "Redacted To Not Change The Baselines From Run To Run"
          },
          "children": [
            {
              "name": "Microsoft.Azure.Cosmos.Handlers.RetryHandler",
              "duration in milliseconds": 0,
              "children": [
                {
                  "name": "Microsoft.Azure.Cosmos.Handlers.RouterHandler",
                  "duration in milliseconds": 0,
                  "children": [
                    {
                      "name": "Microsoft.Azure.Cosmos.Handlers.TransportHandler",
                      "duration in milliseconds": 0,
                      "children": [
                        {
                          "name": "Microsoft.Azure.Documents.ServerStoreModel Transport Request",
                          "duration in milliseconds": 0,
                          "data": {
                            "Client Side Request Stats": "Redacted To Not Change The Baselines From Run To Run"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}]]></Json>
      <OTelActivities><ACTIVITY><OPERATION>Operation.ReadItemStreamAsync</OPERATION><ATTRIBUTE-KEY>kind</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>client</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>az.namespace</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Microsoft.DocumentDB</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.operation</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>ReadItemStreamAsync</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.name</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.container</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.system</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>cosmosdb</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.machine_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>net.peer.name</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>127.0.0.1</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.client_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.user_agent</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.connection_mode</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Direct</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.operation_type</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Read</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.request_content_length_bytes</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.response_content_length_bytes</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.status_code</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.sub_status_code</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.request_charge</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.item_count</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.activity_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.correlated_activity_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.regions_contacted</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>South Central US</ATTRIBUTE-VALUE></ACTIVITY>
<EVENT>Ideally, this should contain request diagnostics but request diagnostics is subject to change with each request as it contains few unique id. So just putting this tag with this static text to make sure event is getting generated for each test.</EVENT>
</OTelActivities>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description>Point Replace</Description>
      <Setup><![CDATA[
    CosmosObject cosmosObject = CosmosObject.Create(
        new Dictionary<string, CosmosElement>()
        {
            { "id", CosmosString.Create(9001.ToString()) },
            { "someField", CosmosString.Create(9001.ToString()) }
        });

    ResponseMessage itemResponse = await container.ReplaceItemStreamAsync(
        new MemoryStream(Encoding.UTF8.GetBytes(cosmosObject.ToString())),
        id: "9001",
        partitionKey: new Cosmos.PartitionKey("9001"));

    ITrace trace = ((CosmosTraceDiagnostics)itemResponse.Diagnostics).Value;
]]></Setup>
    </Input>
    <Output>
      <Text><![CDATA[.
└── ReplaceItemStreamAsync(00000000-0000-0000-0000-000000000000)  Transport-Component  00:00:00:000  0.00 milliseconds  
    │   (
    │       [Client Configuration]
    │       Redacted To Not Change The Baselines From Run To Run
    │   )
    └── Microsoft.Azure.Cosmos.Handlers.RequestInvokerHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
        └── Microsoft.Azure.Cosmos.Handlers.DiagnosticsHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
            │   (
            │       [System Info]
            │       Redacted To Not Change The Baselines From Run To Run
            │   )
            └── Microsoft.Azure.Cosmos.Handlers.RetryHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                └── Microsoft.Azure.Cosmos.Handlers.RouterHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                    └── Microsoft.Azure.Cosmos.Handlers.TransportHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                        └── Microsoft.Azure.Documents.ServerStoreModel Transport Request(00000000-0000-0000-0000-000000000000)  Transport-Component  00:00:00:000  0.00 milliseconds  
                                (
                                    [Client Side Request Stats]
                                    Redacted To Not Change The Baselines From Run To Run
                                )
]]></Text>
      <Json><![CDATA[{
  "Summary": {},
  "name": "ReplaceItemStreamAsync",
  "start time": "00:00:00:000",
  "duration in milliseconds": 0,
  "data": {
    "Client Configuration": "Redacted To Not Change The Baselines From Run To Run"
  },
  "children": [
    {
      "name": "Microsoft.Azure.Cosmos.Handlers.RequestInvokerHandler",
      "duration in milliseconds": 0,
      "children": [
        {
          "name": "Microsoft.Azure.Cosmos.Handlers.DiagnosticsHandler",
          "duration in milliseconds": 0,
          "data": {
            "System Info": "Redacted To Not Change The Baselines From Run To Run"
          },
          "children": [
            {
              "name": "Microsoft.Azure.Cosmos.Handlers.RetryHandler",
              "duration in milliseconds": 0,
              "children": [
                {
                  "name": "Microsoft.Azure.Cosmos.Handlers.RouterHandler",
                  "duration in milliseconds": 0,
                  "children": [
                    {
                      "name": "Microsoft.Azure.Cosmos.Handlers.TransportHandler",
                      "duration in milliseconds": 0,
                      "children": [
                        {
                          "name": "Microsoft.Azure.Documents.ServerStoreModel Transport Request",
                          "duration in milliseconds": 0,
                          "data": {
                            "Client Side Request Stats": "Redacted To Not Change The Baselines From Run To Run"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}]]></Json>
      <OTelActivities><ACTIVITY><OPERATION>Operation.ReplaceItemStreamAsync</OPERATION><ATTRIBUTE-KEY>kind</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>client</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>az.namespace</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Microsoft.DocumentDB</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.operation</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>ReplaceItemStreamAsync</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.name</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.container</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.system</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>cosmosdb</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.machine_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>net.peer.name</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>127.0.0.1</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.client_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.user_agent</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.connection_mode</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Direct</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.operation_type</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Replace</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.request_content_length_bytes</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.response_content_length_bytes</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.status_code</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.sub_status_code</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.request_charge</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.item_count</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.activity_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.correlated_activity_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.regions_contacted</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>South Central US</ATTRIBUTE-VALUE></ACTIVITY>
<EVENT>Ideally, this should contain request diagnostics but request diagnostics is subject to change with each request as it contains few unique id. So just putting this tag with this static text to make sure event is getting generated for each test.</EVENT>
</OTelActivities>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description>Point Delete</Description>
      <Setup><![CDATA[
    ItemRequestOptions requestOptions = new ItemRequestOptions();
    ContainerInternal containerInternal = (ContainerInternal)container;
    ResponseMessage itemResponse = await containerInternal.DeleteItemStreamAsync(
        id: "9001",
        partitionKey: new PartitionKey("9001"),
        requestOptions: requestOptions);

    ITrace trace = ((CosmosTraceDiagnostics)itemResponse.Diagnostics).Value;
]]></Setup>
    </Input>
    <Output>
      <Text><![CDATA[.
└── DeleteItemStreamAsync(00000000-0000-0000-0000-000000000000)  Transport-Component  00:00:00:000  0.00 milliseconds  
    │   (
    │       [Client Configuration]
    │       Redacted To Not Change The Baselines From Run To Run
    │   )
    └── Microsoft.Azure.Cosmos.Handlers.RequestInvokerHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
        └── Microsoft.Azure.Cosmos.Handlers.DiagnosticsHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
            │   (
            │       [System Info]
            │       Redacted To Not Change The Baselines From Run To Run
            │   )
            └── Microsoft.Azure.Cosmos.Handlers.RetryHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                └── Microsoft.Azure.Cosmos.Handlers.RouterHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                    └── Microsoft.Azure.Cosmos.Handlers.TransportHandler(00000000-0000-0000-0000-000000000000)  RequestHandler-Component  00:00:00:000  0.00 milliseconds  
                        └── Microsoft.Azure.Documents.ServerStoreModel Transport Request(00000000-0000-0000-0000-000000000000)  Transport-Component  00:00:00:000  0.00 milliseconds  
                                (
                                    [Client Side Request Stats]
                                    Redacted To Not Change The Baselines From Run To Run
                                )
]]></Text>
      <Json><![CDATA[{
  "Summary": {},
  "name": "DeleteItemStreamAsync",
  "start time": "00:00:00:000",
  "duration in milliseconds": 0,
  "data": {
    "Client Configuration": "Redacted To Not Change The Baselines From Run To Run"
  },
  "children": [
    {
      "name": "Microsoft.Azure.Cosmos.Handlers.RequestInvokerHandler",
      "duration in milliseconds": 0,
      "children": [
        {
          "name": "Microsoft.Azure.Cosmos.Handlers.DiagnosticsHandler",
          "duration in milliseconds": 0,
          "data": {
            "System Info": "Redacted To Not Change The Baselines From Run To Run"
          },
          "children": [
            {
              "name": "Microsoft.Azure.Cosmos.Handlers.RetryHandler",
              "duration in milliseconds": 0,
              "children": [
                {
                  "name": "Microsoft.Azure.Cosmos.Handlers.RouterHandler",
                  "duration in milliseconds": 0,
                  "children": [
                    {
                      "name": "Microsoft.Azure.Cosmos.Handlers.TransportHandler",
                      "duration in milliseconds": 0,
                      "children": [
                        {
                          "name": "Microsoft.Azure.Documents.ServerStoreModel Transport Request",
                          "duration in milliseconds": 0,
                          "data": {
                            "Client Side Request Stats": "Redacted To Not Change The Baselines From Run To Run"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}]]></Json>
      <OTelActivities><ACTIVITY><OPERATION>Operation.DeleteItemStreamAsync</OPERATION><ATTRIBUTE-KEY>kind</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>client</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>az.namespace</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Microsoft.DocumentDB</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.operation</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>DeleteItemStreamAsync</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.name</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.container</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.system</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>cosmosdb</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.machine_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>net.peer.name</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>127.0.0.1</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.client_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.user_agent</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.connection_mode</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Direct</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.operation_type</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>Delete</ATTRIBUTE-VALUE><ATTRIBUTE-KEY>db.cosmosdb.request_content_length_bytes</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.response_content_length_bytes</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.status_code</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.sub_status_code</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.request_charge</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.item_count</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.activity_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.correlated_activity_id</ATTRIBUTE-KEY><ATTRIBUTE-KEY>db.cosmosdb.regions_contacted</ATTRIBUTE-KEY><ATTRIBUTE-VALUE>South Central US</ATTRIBUTE-VALUE></ACTIVITY>
<EVENT>Ideally, this should contain request diagnostics but request diagnostics is subject to change with each request as it contains few unique id. So just putting this tag with this static text to make sure event is getting generated for each test.</EVENT>
</OTelActivities>
    </Output>
  </Result>
</Results>