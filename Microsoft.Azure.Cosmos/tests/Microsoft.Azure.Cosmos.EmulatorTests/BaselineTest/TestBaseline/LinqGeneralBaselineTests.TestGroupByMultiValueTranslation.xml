<Results>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy Multi Value Select Constant]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k, (key, values) => new AnonymousType(stringField = "abv", numField = 123))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT VALUE {"stringField": "abv", "numField": 123} 
FROM root 
GROUP BY root ]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy Multi Value Select Key]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(Key = key, key = key))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT root["id"] AS Key, root["id"] AS key 
FROM root 
GROUP BY root["id"] ]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy Multi Value Select Key and Constant]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(KeyAlias = key, values = 123))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT root["id"] AS KeyAlias, 123 AS values 
FROM root 
GROUP BY root["id"] ]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy Multi Value With Aggregate]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(Min = values.Min(value => value.Int), Max = values.Max(value => value.Int), Avg = values.Average(value => value.Int), Count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT MIN(root["Int"]) AS Min, MAX(root["Int"]) AS Max, AVG(root["Int"]) AS Avg, COUNT(1) AS Count 
FROM root 
GROUP BY root["id"] ]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy Multi Value With Property Ref and Aggregate]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.FamilyId, (key, values) => new AnonymousType(familyId = key, familyIdCount = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT root["FamilyId"] AS familyId, COUNT(1) AS familyIdCount 
FROM root 
GROUP BY root["FamilyId"] ]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy Multi Value With Aggregate On Root]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(Min = values.Min(), Max = values.Max()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT MIN(root) AS Min, MAX(root) AS Max 
FROM root 
GROUP BY root["id"] ]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy Multi Value With Non-Aggregate]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(valueSelect = values.Select(value => value.Int), valueOrderBy = values.OrderBy(f => f.FamilyId)))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Method 'Select' is not supported.]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[Select + GroupBy]]></Description>
      <Expression><![CDATA[query.Select(x => x.Id).GroupBy(k => k, (key, values) => new AnonymousType(keyAlias = key, count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT r0 AS keyAlias, COUNT(1) AS count 
FROM (
    SELECT VALUE root["id"] 
    FROM root) AS r0 
    GROUP BY r0 
]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[Select + GroupBy 2]]></Description>
      <Expression><![CDATA[query.Select(x => new AnonymousType(Id1 = x.Id, family1 = x.FamilyId, childrenN1 = x.Children)).GroupBy(k => k.Id1, (key, values) => new AnonymousType(keyAlias = key, count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT r0["Id1"] AS keyAlias, COUNT(1) AS count 
FROM (
    SELECT VALUE {"Id1": root["id"], "family1": root["FamilyId"], "childrenN1": root["Children"]} 
    FROM root) AS r0 
    GROUP BY r0["Id1"] 
]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[SelectMany + GroupBy]]></Description>
      <Expression><![CDATA[query.SelectMany(x => x.Children).GroupBy(k => k, (key, values) => new AnonymousType(keyAlias = key, count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT x0 AS keyAlias, COUNT(1) AS count 
FROM root 
JOIN x0 IN root["Children"] 
GROUP BY x0 ]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[Skip + GroupBy]]></Description>
      <Expression><![CDATA[query.Skip(10).GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT r0["id"] AS keyAlias, COUNT(1) AS count 
FROM (
    SELECT VALUE root 
    FROM root 
    OFFSET 10 LIMIT 2147483647) AS r0 
    GROUP BY r0["id"] 
]]></SqlQuery>
      <ErrorMessage><![CDATA[Status Code: BadRequest,{"errors":[{"severity":"Error","location":{"start":81,"end":107},"code":"SC2204","message":"'OFFSET LIMIT' clause is not supported in subqueries."}]},0x800A0B00]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[Take + GroupBy]]></Description>
      <Expression><![CDATA[query.Take(10).GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT r0["id"] AS keyAlias, COUNT(1) AS count 
FROM (
    SELECT TOP 10 VALUE root 
    FROM root) AS r0 
    GROUP BY r0["id"] 
]]></SqlQuery>
      <ErrorMessage><![CDATA[Status Code: BadRequest,{"errors":[{"severity":"Error","location":{"start":60,"end":66},"code":"SC2203","message":"'TOP' is not supported in subqueries."}]},0x800A0B00]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[Skip + Take + GroupBy]]></Description>
      <Expression><![CDATA[query.Skip(10).Take(10).GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT r0["id"] AS keyAlias, COUNT(1) AS count 
FROM (
    SELECT VALUE root 
    FROM root 
    OFFSET 10 LIMIT 10) AS r0 
    GROUP BY r0["id"] 
]]></SqlQuery>
      <ErrorMessage><![CDATA[Status Code: BadRequest,{"errors":[{"severity":"Error","location":{"start":81,"end":99},"code":"SC2204","message":"'OFFSET LIMIT' clause is not supported in subqueries."}]},0x800A0B00]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[Filter + GroupBy]]></Description>
      <Expression><![CDATA[query.Where(x => (x.Id != "a")).GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT root["id"] AS keyAlias, COUNT(1) AS count 
FROM root 
WHERE (root["id"] != "a") 
GROUP BY root["id"] ]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[OrderBy + GroupBy]]></Description>
      <Expression><![CDATA[query.OrderBy(x => x.Int).GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT root["id"] AS keyAlias, COUNT(1) AS count 
FROM root 
GROUP BY root["id"]  
ORDER BY root["Int"] ASC]]></SqlQuery>
      <ErrorMessage><![CDATA[Status Code: BadRequest,{"errors":[{"severity":"Error","location":{"start":89,"end":100},"code":"SC2103","message":"Property reference 'root[\"Int\"]' is invalid in the ORDER BY clause because it is not contained in either an aggregate function or the GROUP BY clause."}]},0x800A0B00]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[OrderBy Descending + GroupBy]]></Description>
      <Expression><![CDATA[query.OrderByDescending(x => x.Id).GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT root["id"] AS keyAlias, COUNT(1) AS count 
FROM root 
GROUP BY root["id"]  
ORDER BY root["id"] DESC]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[Combination + GroupBy]]></Description>
      <Expression><![CDATA[query.Where(x => (x.Id != "a")).OrderBy(x => x.Id).GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count()))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[
SELECT root["id"] AS keyAlias, COUNT(1) AS count 
FROM root 
WHERE (root["id"] != "a") 
GROUP BY root["id"]  
ORDER BY root["id"] ASC]]></SqlQuery>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + Select]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).Select(x => x)]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + Select 2]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).Select(x => x.keyAlias)]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + Skip]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).Skip(10)]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + Take]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).Take(10)]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + Skip + Take]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).Skip(10).Take(10)]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + Filter]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).Where(x => (x.keyAlias == "a"))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + OrderBy]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).OrderBy(x => x.keyAlias)]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + OrderBy Descending]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).OrderByDescending(x => x.count)]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + Combination]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).Where(x => (x.keyAlias == "a")).Skip(10).Take(10)]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + GroupBy]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).GroupBy(k => k.count, (key, values) => key)]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
  <Result>
    <Input>
      <Description><![CDATA[GroupBy + GroupBy2]]></Description>
      <Expression><![CDATA[query.GroupBy(k => k.Id, (key, values) => new AnonymousType(keyAlias = key, count = values.Count())).GroupBy(k => k.count, (key, values) => new AnonymousType(keyAlias = key, stringField = "abc"))]]></Expression>
    </Input>
    <Output>
      <SqlQuery><![CDATA[]]></SqlQuery>
      <ErrorMessage><![CDATA[Group By cannot be followed by other methods]]></ErrorMessage>
    </Output>
  </Result>
</Results>